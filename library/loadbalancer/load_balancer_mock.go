// Code generated by MockGen. DO NOT EDIT.
// Source: load_balancer.go

// Package loadbalancer is a generated GoMock package.
package loadbalancer

import (
	context "context"
	net "net"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLoadBalancer is a mock of LoadBalancer interface.
type MockLoadBalancer struct {
	ctrl     *gomock.Controller
	recorder *MockLoadBalancerMockRecorder
}

// MockLoadBalancerMockRecorder is the mock recorder for MockLoadBalancer.
type MockLoadBalancerMockRecorder struct {
	mock *MockLoadBalancer
}

// NewMockLoadBalancer creates a new mock instance.
func NewMockLoadBalancer(ctrl *gomock.Controller) *MockLoadBalancer {
	mock := &MockLoadBalancer{ctrl: ctrl}
	mock.recorder = &MockLoadBalancerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoadBalancer) EXPECT() *MockLoadBalancerMockRecorder {
	return m.recorder
}

// Back mocks base method.
func (m *MockLoadBalancer) Back(arg0 net.Addr, arg1 error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Back", arg0, arg1)
}

// Back indicates an expected call of Back.
func (mr *MockLoadBalancerMockRecorder) Back(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Back", reflect.TypeOf((*MockLoadBalancer)(nil).Back), arg0, arg1)
}

// Pick mocks base method.
func (m *MockLoadBalancer) Pick(arg0 context.Context) (net.Addr, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Pick", arg0)
	ret0, _ := ret[0].(net.Addr)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Pick indicates an expected call of Pick.
func (mr *MockLoadBalancerMockRecorder) Pick(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Pick", reflect.TypeOf((*MockLoadBalancer)(nil).Pick), arg0)
}

// SetAddrs mocks base method.
func (m *MockLoadBalancer) SetAddrs(arg0 []net.Addr) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetAddrs", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetAddrs indicates an expected call of SetAddrs.
func (mr *MockLoadBalancerMockRecorder) SetAddrs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetAddrs", reflect.TypeOf((*MockLoadBalancer)(nil).SetAddrs), arg0)
}

// Strategy mocks base method.
func (m *MockLoadBalancer) Strategy() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Strategy")
	ret0, _ := ret[0].(string)
	return ret0
}

// Strategy indicates an expected call of Strategy.
func (mr *MockLoadBalancerMockRecorder) Strategy() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Strategy", reflect.TypeOf((*MockLoadBalancer)(nil).Strategy))
}
